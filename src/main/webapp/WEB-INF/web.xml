<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">
    <!--指定spring的配置文件所在的目录-->
    <context-param>
        <param-name>contextConfigLocation</param-name><!-- 备注： contextConfigLocation：指定springmvc配置的加载位置，如果不指定则默认加 载WEB-INF/[DispatcherServlet的Servlet 名字]-servlet.xml(例如springmvc-servlet.xml)。 -->
        <param-value>classpath:spring/spring-mybatis.xml</param-value>
    </context-param>
    <!--设置spring监听器-->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <!-- 配置前端控制器 配置springMVC,这里的servlet名称决定着SpringMVC配置文件的名称-->
    <!--配置请求编码(这一部分是手动配置的)-->
    <filter>
        <filter-name>encodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value> <!--设置你想用的字符集，我这里用的是UTF-8-->
        </init-param>
        <!--强制使用该编码-->
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>

    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>/*</url-pattern> <!--设置你想过滤的页面或者是Servlet，根据自己的需要配置-->
    </filter-mapping>
    <servlet>
        <servlet-name>springServlet</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <!--加载前端控制器配置文件 上下文配置位置-->
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:spring/spring-mvc.xml</param-value>
        </init-param>
        <!--表示随WEB服务器启动 启动时加载,1代表优先级,越小代表越高-->
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>springServlet</servlet-name>
        <!-- 备注：可以拦截三种请求 第一种：拦截固定后缀的url，比如设置为 *.do、*.action， 例如：/user/add.action 此方法最简单,不会导致静态资源（jpg,js,css）被拦截. 第二种：拦截所有,设置为/，例如：/user/add /user/add.action此方法可以实现REST风格的url, 很多互联网类型的应用使用这种方式.但是此方法会导致静态文件(jpg,js,css)被拦截后不能正常显示.需要特殊处理. 第三种：拦截所有,设置为/*，此设置方法错误,因为请求到Action,当action转到jsp时再次被拦截,提示不能根据jsp路径mapping成功. -->
        <url-pattern>/</url-pattern>
    </servlet-mapping>

</web-app>
        <!--<?xml version="1.0" encoding="UTF-8"?>-->
        <!--<web-app xmlns="http://java.sun.com/xml/ns/javaee"-->
        <!--xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"-->
        <!--xsi:shemaLocation="http://java.sun.com/xml/ns/javaee-->
        <!--http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"-->
        <!--version="3.0">-->

        <!--</web-app>-->